# Generated by Django 4.0.3 on 2022-04-01 00:16

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='类别名称')),
            ],
        ),
        migrations.CreateModel(
            name='ProductClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='产品分类')),
                ('slug', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='url')),
                ('img', models.ImageField(upload_to='uploads/imgs/%Y/%m/%d/', verbose_name='产品分类图')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='产品名称')),
                ('slug', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='url')),
                ('img1', models.ImageField(upload_to='uploads/imgs/%Y/%m/%d/', verbose_name='产品展示图1')),
                ('img2', models.ImageField(upload_to='uploads/imgs/%Y/%m/%d/', verbose_name='产品展示图2')),
                ('img3', models.ImageField(upload_to='uploads/imgs/%Y/%m/%d/', verbose_name='产品展示图3')),
                ('img4', models.ImageField(upload_to='uploads/imgs/%Y/%m/%d/', verbose_name='产品展示图4')),
                ('params', ckeditor.fields.RichTextField(verbose_name='产品参数')),
                ('description', ckeditor.fields.RichTextField(verbose_name='产品描述')),
                ('advantage', ckeditor.fields.RichTextField(verbose_name='产品优势')),
                ('feature', ckeditor.fields.RichTextField(verbose_name='产品特色')),
                ('content', ckeditor.fields.RichTextField(verbose_name='产品介绍')),
                ('file', models.FileField(upload_to='uploads/files/%Y/%m/%d/', verbose_name='产品文档')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_actived', models.BooleanField(default=True, verbose_name='是否展示')),
                ('produc_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='sitedisplay.productclass', verbose_name='产品分类')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='标题')),
                ('slug', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='url')),
                ('author', models.CharField(max_length=255, verbose_name='作者')),
                ('img', models.ImageField(upload_to='uploads/imgs/%Y/%m/%d/', verbose_name='日志展示图')),
                ('description', ckeditor.fields.RichTextField(verbose_name='概要')),
                ('content', ckeditor.fields.RichTextField(verbose_name='内容')),
                ('pub_time', models.DateTimeField(verbose_name='发布时间')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='sitedisplay.category', verbose_name='分类')),
                ('tag', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
